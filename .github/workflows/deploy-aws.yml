name: Run terraform integration test AWS
run-name: ${{ github.actor }} is testing out GitHub Actions 
on: 
    workflow_dispatch:
        inputs:
            tfpath:
                description: 'TF File Path'     
                required: false
                default: 'infra-aws'
            
permissions:
    id-token: write
    contents: read

jobs:
    terraform-validate:
        uses: Bazilbrush/terraform-templates/.github/workflows/terraform-validate.yml@main
        with:
            tfpath: infra-aws
    
    terraform-plan:
        uses: Bazilbrush/terraform-templates/.github/workflows/terraform-plan.yml@main
        if: ${{ always() }}
        needs: terraform-validate
        with:
            tfpath: infra-aws
            backend-platform: azure
            TF_ENV: integration
            AZ_RG_NAME: backend
            AZ_STORAGE_ACC: backendthni7
            AZ_STORAGE_CONTAINER: backend
            BACKEND_KEY: tests/integration-aws/basic.tfstate
        secrets:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}

    # terraform-apply:
    #     uses: Bazilbrush/terraform-templates/.github/workflows/terraform-apply.yml@main
    #     if: ${{ always() }}
    #     needs: terraform-plan
    #     with:
    #         tfpath: infra-aws
    #         platform: aws
    #         TF_ENV: integration
    #         AZ_RG_NAME: backend
    #         AZ_STORAGE_ACC: backendthni7
    #         AZ_STORAGE_CONTAINER: backend
    #         BACKEND_KEY: tests/integration-aws/basic.tfstate
    #     secrets:
    #         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #         ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
    #         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        
    # terraform-plan-destroy:
    #     uses: Bazilbrush/terraform-templates/.github/workflows/terraform-destroy-plan.yml@main
    #     if: ${{ always() }}
    #     needs: terraform-apply
    #     with:
    #         tfpath: infra-aws
    #         platform: aws
    #         TF_ENV: integration
    #         AZ_RG_NAME: backend
    #         AZ_STORAGE_ACC: backendthni7
    #         AZ_STORAGE_CONTAINER: backend
    #         BACKEND_KEY: tests/integration-aws/basic.tfstate
    #     secrets:
    #         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #         ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
    #         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    # terraform-destroy:
    #     uses: Bazilbrush/terraform-templates/.github/workflows/terraform-destroy.yml@main
    #     if: ${{ always() }}
    #     needs: terraform-plan-destroy
    #     with:
    #         tfpath: infra-aws
    #         platform: aws
    #         TF_ENV: integration
    #         AZ_RG_NAME: backend
    #         AZ_STORAGE_ACC: backendthni7
    #         AZ_STORAGE_CONTAINER: backend
    #         BACKEND_KEY: tests/integration-aws/basic.tfstate
    #     secrets:
    #         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #         ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
    #         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

