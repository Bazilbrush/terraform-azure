name: terraform-validate
run-name: ${{ github.actor }} is testing out GitHub Actions 
on: 
    workflow_dispatch:
        inputs:
            tfpath:
                description: 'TF File Path'     
                required: false
                default: 'infra'
            # AWS_ACCESS_KEY:
            #     description: 'AWS access key'
            #     required: false
            #     default: ''
            # AWS_SECRET_ACCESS_KEY:
            #     description: 'AWS secret'
            #     required: false
            #     default: ''
            # AWS_REGION:
            #     description: 'aws region'
            #     required: false
            #     default: 'eu-west-1'
            # # Azure vars
            # ARM_CLIENT_ID:
            #     description: 'service principal id'
            #     required: false
            #     default: ''
            # ARM_CLIENT_SECRET:
            #     description: 'service principal secret'
            #     required: false
            #     default: ''
            # ARM_SUBSCRIPTION_ID:
            #     description: 'sub id'
            #     required: false
            #     default: ''
            # ARM_TENANT_ID:
            #     description: 'tenant id'
            #     required: false
            #     default: ''
permissions:
    id-token: write
    contents: read

jobs:
    terraform-validate:
        uses: Bazilbrush/terraform-templates/.github/workflows/terraform-validate.yml@main
        with:
            tfpath: infra
    
    terraform-plan:
        uses: Bazilbrush/terraform-templates/.github/workflows/terraform-plan.yml@main
        if: ${{ always() }}
        needs: terraform-validate
        with:
            tfpath: infra
            platform: azure
            AZ_RG_NAME: backend
            AZ_STORAGE_ACC: backendthni7
            AZ_STORAGE_CONTAINER: backend
            BACKEND_KEY: tests/integration/basic.tfstate
        secrets:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        


    terraform-apply:
        name: Terraform Validation and Build
        # if: ${{ always() }}
        needs: terraform-plan
        runs-on: ubuntu-latest
    
        if:  ${{ inputs.tfpath }} 
        steps:
        - uses: actions/checkout@v2.5.0
    
        
        - name: Configure AWS Credentials Action For GitHub Actions
          if: ${{ inputs.AWS_ACCESS_KEY }}
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ inputs.AWS_REGION }} 
        
       
        - name: Setup Terraform CLI
          uses: hashicorp/setup-terraform@v2.0.2
          with: 
            terraform_version: 0.14.0  # yes we wanna hardcode this as we dont want people setting their own
            

        # - name: Terraform  plan and apply
        #   env:
        #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        #   run: |
        #     echo `pwd`
        #     echo "tfpath ${{ github.event.inputs.tfpath }}"
        #     echo "** Running Terraform Init**"
        #     # terraform init -backend=false
        #     terraform init -backend-config="resource_group_name=backend" -backend-config="storage_account_name=backendthni7" -backend-config="container_name=backend" -backend-config="key=tests/integration/basic.tfstate"
    
        #     echo "** Running Terraform Validate**"
        #     terraform validate
    
        #     echo "** Running Terraform Plan**"
        #     terraform plan
    
        #     echo "** Running Terraform Apply**"
        #     terraform apply -auto-approve
        #   working-directory: ${{ github.event.inputs.tfpath }}

        # - name: Terraform Destroy
        #   env:
        #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        #   run: |
        #     echo "** Running Terraform Destroy**"
        #     terraform plan -destroy
        #     terraform destroy -auto-approve
        #   working-directory: ${{ github.event.inputs.tfpath }}